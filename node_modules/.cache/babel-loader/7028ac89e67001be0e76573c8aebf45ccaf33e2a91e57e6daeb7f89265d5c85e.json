{"ast":null,"code":"var _jsxFileName = \"/Users/veruskaoropeza/projects/bright-bites/src/stories/Chip.tsx\";\nimport React from 'react';\n//import '../../framer/styles.css';\n// This file imported below is generated when you run `npm run framer`\nimport ChipFramerComponent from '../framer/chip';\nimport \"../framer/styles.css\";\n\n// Define props for the ChipFramerComponent if available\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Ensure ChipFramerComponent has proper typing\nconst TypedChipFramerComponent = ChipFramerComponent;\nexport default function ChipComponent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(TypedChipFramerComponent.Responsive, {\n      websiteName: \"example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n/*//JX code which works\n    // this file imported below is generated when you run `npm run framer`\n    import ChipFramerComponent from '../../framer/chip'\n    \n    export default function App() {\n        return (\n            <div className='flex flex-col'>\n                <ChipFramerComponent\n                    exampleFramerVariable='example'\n                    style={{ width: '100%' }}\n                />\n                {//use .Responsive for components with breakpoints }\n                <ChipFramerComponent.Responsive\n                    exampleFramerVariable='example' \n                />\n            </div>\n        );\n    };*/\n_c = ChipComponent;\n;\nChipComponent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ChipComponent\"\n};\nvar _c;\n$RefreshReg$(_c, \"ChipComponent\");","map":{"version":3,"names":["React","ChipFramerComponent","jsxDEV","_jsxDEV","TypedChipFramerComponent","ChipComponent","className","children","Responsive","websiteName","fileName","_jsxFileName","lineNumber","columnNumber","_c"],"sources":["/Users/veruskaoropeza/projects/bright-bites/src/stories/Chip.tsx"],"sourcesContent":["import React from 'react';\n//import '../../framer/styles.css';\n// This file imported below is generated when you run `npm run framer`\nimport ChipFramerComponent from '../framer/chip';\nimport \"../framer/styles.css\";\n\n// Define props for the ChipFramerComponent if available\ninterface ChipFramerProps {\n    websiteName: string;\n    style?: React.CSSProperties;\n}\n\n// Ensure ChipFramerComponent has proper typing\nconst TypedChipFramerComponent = ChipFramerComponent as React.FC<ChipFramerProps> & {\n    Responsive: React.FC<ChipFramerProps>;\n};\n\nexport default function ChipComponent() {\n    return (\n        <div className=\"flex flex-col\">\n            <TypedChipFramerComponent.Responsive \n                websiteName=\"example\" \n            />\n        </div>\n    );\n}\n\n/*//JX code which works\n    // this file imported below is generated when you run `npm run framer`\n    import ChipFramerComponent from '../../framer/chip'\n    \n    export default function App() {\n        return (\n            <div className='flex flex-col'>\n                <ChipFramerComponent\n                    exampleFramerVariable='example'\n                    style={{ width: '100%' }}\n                />\n                {//use .Responsive for components with breakpoints }\n                <ChipFramerComponent.Responsive\n                    exampleFramerVariable='example' \n                />\n            </div>\n        );\n    };*/\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,OAAOC,mBAAmB,MAAM,gBAAgB;AAChD,OAAO,sBAAsB;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,wBAAwB,GAAGH,mBAEhC;AAED,eAAe,SAASI,aAAaA,CAAA,EAAG;EACpC,oBACIF,OAAA;IAAKG,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1BJ,OAAA,CAACC,wBAAwB,CAACI,UAAU;MAChCC,WAAW,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBAC,EAAA,GAVwBT,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}