{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { combinedCSSRules } from './framer.js';\nimport { createContext, useContext, useMemo, useSyncExternalStore } from 'react';\nimport { breakpointsStylesLegacy, defaultBreakpointSizes, getFontsStyles } from './css.js';\nimport { version } from './version.js';\nfunction classNames(...args) {\n  return args.filter(Boolean).join(' ');\n}\n// breakpoints from the higher to the lower\nconst defaultBreakpoints = Object.keys(defaultBreakpointSizes).reverse();\nfunction getBreakpointNameFromWindowWidth(windowWidth) {\n  return defaultBreakpoints.find(name => windowWidth >= defaultBreakpointSizes[name]);\n}\nfunction fillBreakpoints(breakpoints) {\n  const breakpointsOrder = ['base', 'sm', 'md', 'lg', 'xl', '2xl'];\n  const filledBreakpoints = {\n    ...breakpoints\n  };\n  for (let i = 1; i < breakpointsOrder.length; i++) {\n    const currentBreakpoint = breakpointsOrder[i];\n    const previousBreakpoint = breakpointsOrder[i - 1];\n    if (!filledBreakpoints[currentBreakpoint]) {\n      filledBreakpoints[currentBreakpoint] = filledBreakpoints[previousBreakpoint];\n    }\n  }\n  return filledBreakpoints;\n}\nconst nothing = () => {\n  return () => {};\n};\n/**\n * @deprecated Use styles.css import instead\n */\nexport function FramerStyles({\n  Components = []\n}) {\n  const isClient = useSyncExternalStore(nothing, () => true, () => false);\n  const breakpoints = _jsx(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: breakpointsStylesLegacy(defaultBreakpointSizes)\n    },\n    suppressHydrationWarning: true,\n    hidden: true\n  }, 'breakpointsStyles');\n  const fonts = _jsx(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: getFontsStyles(Components.map(x => x.fonts || []).flat())\n    },\n    suppressHydrationWarning: true,\n    hidden: true\n  }, 'fonts');\n  // if (isClient) {\n  //     // on client framer injects the styles by itself\n  //     return (\n  //         <>\n  //             {breakpoints}\n  //             {fonts}\n  //         </>\n  //     )\n  // }\n  return _jsxs(_Fragment, {\n    children: [breakpoints, fonts, _jsx(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: combinedCSSRules.join('\\n')\n      },\n      suppressHydrationWarning: true,\n      hidden: true\n    }, 'combinedCSSRules')]\n  });\n}\nexport const WithFramerBreakpoints = ({\n  Component,\n  variants: _breakpointsMap,\n  ...rest\n}) => {\n  const currentBreakpoint = useSyncExternalStore(onResize, () => {\n    // console.log('window.innerWidth', window.innerWidth)\n    const breakpoint = getBreakpointNameFromWindowWidth(window.innerWidth);\n    return breakpoint;\n  }, () => {\n    // on server and during hydration\n    return '';\n  });\n  if (isEmpty(_breakpointsMap)) {\n    // @ts-ignore\n    return _jsx(Component, {\n      ...rest\n    });\n  }\n  const allBreakpoints = fillBreakpoints(_breakpointsMap);\n  const variants = new Map();\n  for (let breakpointName of Object.keys(allBreakpoints)) {\n    const realVariant = allBreakpoints[breakpointName];\n    if (!realVariant) {\n      continue;\n    }\n    const existingVariant = variants.get(realVariant);\n    if (existingVariant) {\n      existingVariant.breakpoints.push(breakpointName);\n      existingVariant.className = classNames(existingVariant.className, `unframer-${breakpointName}`);\n    } else {\n      variants.set(realVariant, {\n        className: classNames('unframer unframer-hidden', `unframer-${breakpointName}`),\n        variant: realVariant,\n        breakpoints: [breakpointName]\n      });\n    }\n  }\n  const parts = [...variants.values()].map(({\n    className,\n    breakpoints,\n    variant\n  }, i) => {\n    const shouldShow = !currentBreakpoint || breakpoints.includes(currentBreakpoint);\n    if (!shouldShow) {\n      return null;\n    }\n    const c = classNames(className, rest.className);\n    return (\n      // @ts-ignore\n      _jsx(Component\n      // LayoutGroup is used internally\n      , {\n        // LayoutGroup is used internally\n        layoutId: variant,\n        ...rest,\n        className: c,\n        variant: variant\n      }, variant)\n    );\n  });\n  parts.push(_jsx(DebugUnframerVersion, {}, 'debug-unframer-version'));\n  return parts;\n};\nconst onResize = callback => {\n  window.addEventListener('resize', callback);\n  return () => window.removeEventListener('resize', callback);\n};\nconst onResizeWithDebounce = callback => {\n  let timeoutId;\n  const debouncedCallback = () => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      callback();\n    }, 16);\n  };\n  window.addEventListener('resize', debouncedCallback);\n  return () => {\n    clearTimeout(timeoutId);\n    window.removeEventListener('resize', debouncedCallback);\n  };\n};\nimport React from 'react';\nimport {\n// @ts-ignore\nCustomCursorHost,\n// @ts-ignore\nFetchClientProvider,\n// @ts-ignore\nFormContext,\n// @ts-ignore\nFramerLink as Link,\n// @ts-ignore\nLocaleInfoContext } from './framer.js';\nconst routesContext = React.createContext({});\nfunction replacePathParams(path, params) {\n  const paramRegex = /:[a-zA-Z]+/g;\n  const matches = path.match(paramRegex);\n  // If there is only one match\n  if (matches?.length === 1) {\n    const paramValue = Object.values(params)[0];\n    let res = path.replace(paramRegex, paramValue);\n    // console.log({ matches, params, paramValue, res })\n    return res;\n  }\n  return path.replace(paramRegex, match => {\n    const param = match.slice(1); // Remove the : prefix\n    return params[param] || match; // Replace with param value or keep original if not found\n  });\n}\nexport function ResolveLinksAdapted({\n  links,\n  children\n}) {\n  // TODO add ref\n  return children(links.map(x => x.href));\n}\nfunction isRelativeLink(url) {\n  if (!url) {\n    return false;\n  }\n  return url?.startsWith?.('/') || url?.startsWith?.('#');\n}\nexport function AdaptedLink({\n  href,\n  nodeId,\n  openInNewTab,\n  smoothScroll,\n  children,\n  ...rest\n}) {\n  const context = useContext(unframerContext);\n  let onClick = context.navigate && !openInNewTab ? e => {\n    if (!context.navigate) return;\n    const href = e.currentTarget?.getAttribute('href');\n    if (!href) return;\n    e.preventDefault();\n    if (rest.onClick) rest.onClick(e);\n    context.navigate(href);\n  } : null;\n  const onlyForFramer = {\n    children,\n    nodeId,\n    openInNewTab,\n    smoothScroll\n  };\n  const routes = React.useContext(routesContext);\n  const webPageId = href?.webPageId;\n  const pathVariables = href?.pathVariables;\n  const route = routes?.[webPageId];\n  const target = openInNewTab ? '_blank' : undefined;\n  // console.log({ href, pathVariables, path: route?.path, ...rest })\n  if (isRelativeLink(href)) {\n    return React.cloneElement(children, {\n      ...rest,\n      onClick,\n      href,\n      target\n    });\n  }\n  if (!webPageId) {\n    return _jsx(Link, {\n      href: href,\n      ...rest,\n      ...onlyForFramer\n    });\n  }\n  if (!route || !route.path) {\n    return _jsx(Link, {\n      href: href,\n      ...rest,\n      ...onlyForFramer\n    });\n  }\n  let path = route.path;\n  if (pathVariables) {\n    path = replacePathParams(path, pathVariables);\n  }\n  if (isRelativeLink(path)) {\n    return React.cloneElement(children, {\n      ...rest,\n      onClick,\n      href: path,\n      target\n    });\n  }\n  return _jsx(Link, {\n    href: path,\n    ...rest,\n    ...onlyForFramer\n  });\n}\nexport function ContextProviders({\n  locale,\n  children,\n  framerSiteId,\n  routes,\n  // collectionUtils,\n  locales\n}) {\n  const activeLocale = locales?.find(l => l.slug === locale || l.code === locale || l.id === locale);\n  const localeInfo = useMemo(() => {\n    return {\n      activeLocale,\n      locales,\n      setLocale: async localeOrLocaleId => {\n        console.log('setLocale', localeOrLocaleId);\n      }\n    };\n  }, [activeLocale, locales]);\n  return _jsx(FetchClientProvider, {\n    children: _jsx(CustomCursorHost, {\n      children: _jsx(FormContext.Provider, {\n        value: framerSiteId,\n        children: _jsx(LocaleInfoContext, {\n          value: localeInfo,\n          children: _jsx(routesContext.Provider, {\n            value: routes,\n            children: children\n          })\n        })\n      })\n    })\n  });\n}\nconst isFunction = value => {\n  return typeof value === 'function';\n};\nvar framerCSSMarker = 'data-framer-css-ssr';\n/**\n * Add Unframer debug information to debug websites using Unframer\n */\nfunction DebugUnframerVersion() {\n  return _jsxs(\"details\", {\n    style: {\n      display: 'none'\n    },\n    children: [\"Using\", ' ', _jsx(\"a\", {\n      href: 'https://unframer.co',\n      className: '',\n      children: \"Framer React Export\"\n    }), ' ', \"version \", version]\n  });\n}\nfunction isEmpty(obj) {\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconst unframerContext = createContext({\n  navigate: undefined\n});\nexport function UnframerProvider(props) {\n  return _jsx(unframerContext.Provider, {\n    value: props,\n    children: props.children\n  });\n}","map":{"version":3,"names":["combinedCSSRules","createContext","useContext","useMemo","useSyncExternalStore","breakpointsStylesLegacy","defaultBreakpointSizes","getFontsStyles","version","classNames","args","filter","Boolean","join","defaultBreakpoints","Object","keys","reverse","getBreakpointNameFromWindowWidth","windowWidth","find","name","fillBreakpoints","breakpoints","breakpointsOrder","filledBreakpoints","i","length","currentBreakpoint","previousBreakpoint","nothing","FramerStyles","Components","isClient","_jsx","dangerouslySetInnerHTML","__html","suppressHydrationWarning","hidden","fonts","map","x","flat","_jsxs","_Fragment","children","WithFramerBreakpoints","Component","variants","_breakpointsMap","rest","onResize","breakpoint","window","innerWidth","isEmpty","allBreakpoints","Map","breakpointName","realVariant","existingVariant","get","push","className","set","variant","parts","values","shouldShow","includes","c","layoutId","DebugUnframerVersion","callback","addEventListener","removeEventListener","onResizeWithDebounce","timeoutId","debouncedCallback","clearTimeout","setTimeout","React","CustomCursorHost","FetchClientProvider","FormContext","FramerLink","Link","LocaleInfoContext","routesContext","replacePathParams","path","params","paramRegex","matches","match","paramValue","res","replace","param","slice","ResolveLinksAdapted","links","href","isRelativeLink","url","startsWith","AdaptedLink","nodeId","openInNewTab","smoothScroll","context","unframerContext","onClick","navigate","e","currentTarget","getAttribute","preventDefault","onlyForFramer","routes","webPageId","pathVariables","route","target","undefined","cloneElement","ContextProviders","locale","framerSiteId","locales","activeLocale","l","slug","code","id","localeInfo","setLocale","localeOrLocaleId","console","log","Provider","value","isFunction","framerCSSMarker","style","display","obj","key","hasOwnProperty","UnframerProvider","props"],"sources":["/Users/veruskaoropeza/projects/bright-bites/node_modules/unframer/src/react.tsx"],"sourcesContent":["'use client'\nimport { combinedCSSRules, withCSS as originalWithCSS } from './framer.js'\n\nimport {\n    ComponentPropsWithoutRef,\n    ComponentType,\n    createContext,\n    forwardRef,\n    useContext,\n    useMemo,\n    useSyncExternalStore,\n} from 'react'\nimport {\n    breakpointsStylesLegacy,\n    defaultBreakpointSizes,\n    getFontsStyles,\n} from './css.js'\nimport { version } from './version.js'\n\nfunction classNames(...args) {\n    return args.filter(Boolean).join(' ')\n}\n\n// breakpoints from the higher to the lower\nconst defaultBreakpoints = Object.keys(\n    defaultBreakpointSizes,\n).reverse() as UnframerBreakpoint[]\n\nexport type UnframerBreakpoint = keyof typeof defaultBreakpointSizes\n\nfunction getBreakpointNameFromWindowWidth(windowWidth: number) {\n    return defaultBreakpoints.find(\n        (name) => windowWidth >= defaultBreakpointSizes[name],\n    )\n}\n\ntype Breakpoints = Record<UnframerBreakpoint, string>\n\nfunction fillBreakpoints(breakpoints: Breakpoints): Breakpoints {\n    const breakpointsOrder = ['base', 'sm', 'md', 'lg', 'xl', '2xl']\n    const filledBreakpoints: Breakpoints = { ...breakpoints }\n\n    for (let i = 1; i < breakpointsOrder.length; i++) {\n        const currentBreakpoint = breakpointsOrder[i]\n        const previousBreakpoint = breakpointsOrder[i - 1]\n\n        if (!filledBreakpoints[currentBreakpoint]) {\n            filledBreakpoints[currentBreakpoint] =\n                filledBreakpoints[previousBreakpoint]\n        }\n    }\n    return filledBreakpoints\n}\n\nconst nothing = () => {\n    return () => {}\n}\n\n/**\n * @deprecated Use styles.css import instead\n */\nexport function FramerStyles({ Components = [] as any[] }): any {\n    const isClient = useSyncExternalStore(\n        nothing,\n        () => true,\n        () => false,\n    )\n    const breakpoints = (\n        <style\n            dangerouslySetInnerHTML={{\n                __html: breakpointsStylesLegacy(defaultBreakpointSizes),\n            }}\n            key='breakpointsStyles'\n            suppressHydrationWarning\n            hidden\n        />\n    )\n    const fonts = (\n        <style\n            dangerouslySetInnerHTML={{\n                __html: getFontsStyles(\n                    Components.map((x) => x.fonts || []).flat(),\n                ),\n            }}\n            suppressHydrationWarning\n            key='fonts'\n            hidden\n        />\n    )\n    // if (isClient) {\n    //     // on client framer injects the styles by itself\n    //     return (\n    //         <>\n    //             {breakpoints}\n    //             {fonts}\n    //         </>\n    //     )\n    // }\n    return (\n        <>\n            {breakpoints}\n            {fonts}\n            <style\n                dangerouslySetInnerHTML={{\n                    __html: combinedCSSRules.join('\\n'),\n                }}\n                key='combinedCSSRules'\n                suppressHydrationWarning\n                hidden\n            />\n        </>\n    )\n}\n\nexport const WithFramerBreakpoints = <\n    T extends ComponentType<{ variant?: any; className?: string }>,\n>({\n    Component,\n    variants: _breakpointsMap,\n    ...rest\n}: {\n    Component: T\n    variants: Record<UnframerBreakpoint, ComponentPropsWithoutRef<T>['variant']>\n} & Omit<ComponentPropsWithoutRef<T>, 'variant'>): any => {\n    const currentBreakpoint = useSyncExternalStore(\n        onResize,\n        () => {\n            // console.log('window.innerWidth', window.innerWidth)\n            const breakpoint = getBreakpointNameFromWindowWidth(\n                window.innerWidth,\n            )\n            return breakpoint\n        },\n        () => {\n            // on server and during hydration\n\n            return ''\n        },\n    )\n    if (isEmpty(_breakpointsMap)) {\n        // @ts-ignore\n        return <Component {...rest} />\n    }\n    const allBreakpoints = fillBreakpoints(_breakpointsMap)\n    const variants = new Map<\n        string,\n        { className: string; variant: string; breakpoints: string[] }\n    >()\n    for (let breakpointName of Object.keys(allBreakpoints)) {\n        const realVariant = allBreakpoints[breakpointName]\n        if (!realVariant) {\n            continue\n        }\n\n        const existingVariant = variants.get(realVariant)\n        if (existingVariant) {\n            existingVariant.breakpoints.push(breakpointName)\n            existingVariant.className = classNames(\n                existingVariant.className,\n                `unframer-${breakpointName}`,\n            )\n        } else {\n            variants.set(realVariant, {\n                className: classNames(\n                    'unframer unframer-hidden',\n                    `unframer-${breakpointName}`,\n                ),\n                variant: realVariant,\n                breakpoints: [breakpointName],\n            })\n        }\n    }\n    const parts = [...variants.values()].map(\n        ({ className, breakpoints, variant }, i) => {\n            const shouldShow =\n                !currentBreakpoint || breakpoints.includes(currentBreakpoint)\n            if (!shouldShow) {\n                return null\n            }\n            const c = classNames(className, rest.className)\n\n            return (\n                // @ts-ignore\n                <Component\n                    // LayoutGroup is used internally\n                    layoutId={variant}\n                    key={variant}\n                    // layoutDependency={id}\n                    // layoutId={id + variant}\n                    // layoutId={breakpointName}\n                    {...rest}\n                    className={c}\n                    variant={variant as any}\n                />\n            )\n        },\n    )\n    parts.push(<DebugUnframerVersion key='debug-unframer-version' />)\n\n    return parts\n}\n\nconst onResize = (callback) => {\n    window.addEventListener('resize', callback)\n    return () => window.removeEventListener('resize', callback)\n}\n\nconst onResizeWithDebounce = (callback) => {\n    let timeoutId\n    const debouncedCallback = () => {\n        clearTimeout(timeoutId)\n        timeoutId = setTimeout(() => {\n            callback()\n        }, 16)\n    }\n    window.addEventListener('resize', debouncedCallback)\n    return () => {\n        clearTimeout(timeoutId)\n        window.removeEventListener('resize', debouncedCallback)\n    }\n}\n\nimport React from 'react'\nimport {\n    // @ts-ignore\n    CustomCursorHost,\n    // @ts-ignore\n    FetchClientProvider,\n    // @ts-ignore\n    FormContext,\n    // @ts-ignore\n    FramerLink as Link,\n    // @ts-ignore\n    LocaleInfoContext,\n} from './framer.js'\n\ntype Routes = Record<string, { path: string }>\n\nconst routesContext = React.createContext<Routes>({})\n\nfunction replacePathParams(path: string, params: Record<string, string>) {\n    const paramRegex = /:[a-zA-Z]+/g\n    const matches = path.match(paramRegex)\n\n    // If there is only one match\n    if (matches?.length === 1) {\n        const paramValue = Object.values(params)[0]\n\n        let res = path.replace(paramRegex, paramValue)\n        // console.log({ matches, params, paramValue, res })\n\n        return res\n    }\n\n    return path.replace(paramRegex, (match) => {\n        const param = match.slice(1) // Remove the : prefix\n        return params[param] || match // Replace with param value or keep original if not found\n    })\n}\n\nexport function ResolveLinksAdapted({ links, children }) {\n    // TODO add ref\n    return children(links.map((x) => x.href))\n}\n\nfunction isRelativeLink(url) {\n    if (!url) {\n        return false\n    }\n    return url?.startsWith?.('/') || url?.startsWith?.('#')\n}\nexport function AdaptedLink({\n    href,\n    nodeId,\n    openInNewTab,\n    smoothScroll,\n    children,\n    ...rest\n}) {\n    const context = useContext(unframerContext)\n    let onClick =\n        context.navigate && !openInNewTab\n            ? (e) => {\n                  if (!context.navigate) return\n                  const href = e.currentTarget?.getAttribute('href')\n                  if (!href) return\n                  e.preventDefault()\n                  if (rest.onClick) rest.onClick(e)\n                  context.navigate(href)\n              }\n            : null\n    const onlyForFramer = { children, nodeId, openInNewTab, smoothScroll }\n    const routes = React.useContext(routesContext)\n    const webPageId = href?.webPageId as string\n    const pathVariables = href?.pathVariables as Record<string, string>\n    const route = routes?.[webPageId]\n    const target = openInNewTab ? '_blank' : undefined\n    // console.log({ href, pathVariables, path: route?.path, ...rest })\n    if (isRelativeLink(href)) {\n        return React.cloneElement(children, { ...rest, onClick, href, target })\n    }\n    if (!webPageId) {\n        return <Link href={href} {...rest} {...onlyForFramer} />\n    }\n\n    if (!route || !route.path) {\n        return <Link href={href} {...rest} {...onlyForFramer} />\n    }\n    let path = route.path\n    if (pathVariables) {\n        path = replacePathParams(path, pathVariables)\n    }\n    if (isRelativeLink(path)) {\n        return React.cloneElement(children, {\n            ...rest,\n            onClick,\n            href: path,\n            target,\n        })\n    }\n\n    return <Link href={path} {...rest} {...onlyForFramer} />\n}\n\nexport function ContextProviders({\n    locale,\n    children,\n    framerSiteId,\n    routes,\n    // collectionUtils,\n    locales,\n}) {\n    const activeLocale = locales?.find(\n        (l) => l.slug === locale || l.code === locale || l.id === locale,\n    )\n\n    const localeInfo = useMemo(() => {\n        return {\n            activeLocale,\n            locales,\n            setLocale: async (localeOrLocaleId) => {\n                console.log('setLocale', localeOrLocaleId)\n            },\n        }\n    }, [activeLocale, locales])\n    return (\n        <FetchClientProvider>\n            <CustomCursorHost>\n                <FormContext.Provider value={framerSiteId}>\n                    <LocaleInfoContext value={localeInfo}>\n                        <routesContext.Provider value={routes}>\n                            {/* <Router\n                                initialRoute='x'\n                                routes={{\n                                    x: { page: children, path: '/' },\n                                    ...routes,\n                                }}\n                                locales={locales}\n                                initialLocaleId={activeLocale?.id}\n                            >\n                                {children}\n                            </Router> */}\n                            {children}\n                        </routesContext.Provider>\n                    </LocaleInfoContext>\n                </FormContext.Provider>\n            </CustomCursorHost>\n        </FetchClientProvider>\n    )\n}\n\nconst isFunction = (value: any): value is Function => {\n    return typeof value === 'function'\n}\n\nvar framerCSSMarker = 'data-framer-css-ssr'\n\n/**\n * Add Unframer debug information to debug websites using Unframer\n */\nfunction DebugUnframerVersion() {\n    return (\n        <details style={{ display: 'none' }}>\n            Using{' '}\n            <a href='https://unframer.co' className=''>\n                Framer React Export\n            </a>{' '}\n            version {version}\n        </details>\n    )\n}\nfunction isEmpty(obj: Record<any, any>) {\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            return false\n        }\n    }\n    return true\n}\n\ntype UnframerProviderProps = {\n    navigate?: (url: string) => void\n    children: React.ReactNode\n}\n\nconst unframerContext = createContext<Partial<UnframerProviderProps>>({\n    navigate: undefined,\n})\n\nexport function UnframerProvider(props: UnframerProviderProps) {\n    return (\n        <unframerContext.Provider value={props}>\n            {props.children}\n        </unframerContext.Provider>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}