"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const exporter_1 = require("./exporter");
const esbuild_1 = require("./esbuild");
(0, vitest_1.test)('checkUnframerVersion', () => {
    (0, exporter_1.checkUnframerVersion)({ cwd: process.cwd() });
});
(0, vitest_1.describe)('replaceWebPageIds', () => {
    (0, vitest_1.test)('replaces webPageIds with paths', () => {
        const elements = [
            { webPageId: 'abc123', path: '/page1' },
            { webPageId: 'def456', path: '/page2' },
        ];
        const code = `{ webPageId: 'abc123' }`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({ elements, code })).toEqual(`'/page1'`);
        const code2 = `{ webPageId: "def456" }`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({ elements, code: code2 })).toEqual(`'/page2'`);
    });
    (0, vitest_1.test)('handles whitespace variations', () => {
        const elements = [{ webPageId: 'abc123', path: '/page1' }];
        const code = `{webPageId:'abc123'}`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({ elements, code })).toEqual(`'/page1'`);
        const code2 = `{  webPageId  :  'abc123'  }`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({ elements, code: code2 })).toEqual(`'/page1'`);
        const code3 = `{ href: { webPageId: 'zRPFqFbvc' } }`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({
            elements: [{ webPageId: 'zRPFqFbvc', path: '/page1' }],
            code: code3,
        })).toEqual(`{ href: '/page1' }`);
        const code4 = `/* @__PURE__ */ _jsx(Link, {
                      href: { webPageId: 'zRPFqFbvc', },
                      nodeId: 'aU2SMIi6t',`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({
            elements: [{ webPageId: 'zRPFqFbvc', path: '/page1' }],
            code: code4,
        })).toMatchInlineSnapshot(`
          "/* @__PURE__ */ _jsx(Link, {
                                href: '/page1',
                                nodeId: 'aU2SMIi6t',"
        `);
    });
    (0, vitest_1.test)('preserves non-matching webPageIds', () => {
        const elements = [{ webPageId: 'abc123', path: '/page1' }];
        const code = `{ webPageId: 'xyz789' }`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({ elements, code })).toEqual(`{ webPageId: 'xyz789' }`);
    });
    (0, vitest_1.test)('handles newlines in input', () => {
        const elements = [{ webPageId: 'abc123', path: '/page1' }];
        const code = `{\n  webPageId: 'abc123'\n}`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({ elements, code })).toEqual(`'/page1'`);
        const code2 = `{\n\n  webPageId:\n  'abc123'\n\n}`;
        (0, vitest_1.expect)((0, esbuild_1.replaceWebPageIds)({ elements, code: code2 })).toEqual(`'/page1'`);
    });
});
(0, vitest_1.describe)('propCamelCase', () => {
    (0, vitest_1.test)('converts dashes to camelCase', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('foo-bar')).toMatchInlineSnapshot(`"fooBar"`);
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('foo-bar-baz')).toMatchInlineSnapshot(`"fooBarBaz"`);
    });
    (0, vitest_1.test)('converts example-variable_dashes etc XX something 11 to camelCase', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('example-variable_dashes etc XX something 11')).toBe(`exampleVariableDashesEtcXXSomething11`);
    });
    (0, vitest_1.test)('converts 0 starts with ZeroEtc to camelCase', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('0 starts with ZeroEtc')).toBe(`_0StartsWithZeroEtc`);
    });
    (0, vitest_1.test)('converts underscores to camelCase', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('foo_bar')).toMatchInlineSnapshot(`"fooBar"`);
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('foo_bar_baz')).toMatchInlineSnapshot(`"fooBarBaz"`);
    });
    (0, vitest_1.test)('removes spaces and camelCases', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('Foo Bar')).toMatchInlineSnapshot(`"fooBar"`);
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('Foo Bar Baz')).toMatchInlineSnapshot(`"fooBarBaz"`);
    });
    (0, vitest_1.test)('ensures first character is lowercase', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('FooBar')).toMatchInlineSnapshot(`"fooBar"`);
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('Foo')).toMatchInlineSnapshot(`"foo"`);
    });
    (0, vitest_1.test)('handles empty string', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('')).toMatchInlineSnapshot('""');
    });
    (0, vitest_1.test)('handles mixed cases', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('Foo-Bar_Baz Test')).toMatchInlineSnapshot(`"fooBar_BazTest"`);
    });
    (0, vitest_1.test)('converts APITableData to apiTableData', () => {
        (0, vitest_1.expect)((0, exporter_1.propCamelCase)('Settings APITableData')).toBe(`settingsAPITAbleData`);
    });
});
//# sourceMappingURL=exporter.test.js.map